# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.

# Example IP addressses used in this file:
# 22.22.22.22 - Target staging server's IP address
# 33.33.33.33 - Second worker node in this 2-server setup
# 55.55.55.55 - This IP address is both the VPN server the server used as a bastion / jump host
# 66.66.66.66 - This IP address is the address of a backup server

all:
  vars:
    # "enable_backups" is set to true on production.  Production will always backup it's own data.
    enable_backups: true
    # This configuration variable blocks all access to the server, including SSH, except from the IP addresses specified below.
    # In most cases these should be left empty, as the VPN server should be the only source of traffic.
    # OpenCRVS should never be exposed to the public internet. If this is not possible to organise,
    # then this should always be set when configuring a production server if there is no other firewall in front of the server.
    # BE CAREFUL! This will block all SSH traffic except from the IP addresses listed here.
    only_allow_access_from_addresses:
      # @todo place the IP address of your jump server or other explicitly allowed traffic sources here
      #- 55.55.55.55 # example jump server IP address
      []
    backup_server_remote_target_directory: /home/backup/backups
    users:
      # @todo this is where you define which development team members have access to the server.
      # If you need to remove access from someone, do not remove them from this list, but instead set their state: absent
      - name: rochel
        ssh_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC3NSCi6xSkPMl21e9TEAudav4pOO2EGguP4Djy4X8WLp6jO+GHDRo4gceInimCOdA9mqzb4yJgNoVFlEG6J9X5Axj4TfZ1fg9NdsJcLcEd3N7V0g51vbv7StCqdgr5m7TrjRXfSinDd9R41KHTzbfQNh3uYbp+cAm0vDoNgtXCzBkpqnsEo2rTNmnqgKAiWmu2vybT/A0i4PsaIeeSlsMZ9zLH7AdRxvrWlmXJA7ye9noQVyW8b2zOpE3LFiMEk93ZItDqzhFgOyLN3NNFGhhCvmcqYrLqIO9hpHOrDeio+ykG8g+3s42AG7AdyuW7BVcbr99mpd02NZW9RmY5va6+j156GVRf54KrM4yXxLeZjVj/h4uaLEGIulZh1mECDWiQc2L7/sWW6l3LoAL1k3b11shhpvXz4PA/22YTHsfcWObMQ7Uiy6bbfQO3hswaLyfJVMJ9QT3LymxZGvReGb2lpMATwWo8YH7dzIsBAaPugFAZdjskuJe6Y6BhdFgjdjOlcjxhi94Ui7PGS0XQHESQl7lwUeAxz0yEJ0arVwCOyq/hMKmmVS6PhezP2iYw9azvqwu+UqEFPUaBkdbphWQ2WmouK2xEazqsjSnyHA0rWxHAv43uCqvq+BXpBagEJHLfZ0uEeHkuerFWwpUOVKnJQn34NDL6v12l3/Xonwt9+Q== rochel@rochel
        state: present
        sudoer: true

docker-manager-first:
  hosts:
    siecm-prod-app-1: # @todo set this to be the hostname of your target server
      ansible_host: '102.16.127.249' # @todo set this to be the hostname of your target server
      ansible_port: 10010
      internal_ssh_port: 22
      data_label: data1
      # If you are using a jump server to access this environment, enter other SSH args here.
      # ansible_ssh_common_args: '-J jump@55.55.55.55 -o StrictHostKeyChecking=no' # @todo set this to be the IP address of your jump server

# @todo We recommend you add 2-4 workers for a scaled production deployment
# This should depend on the size of your country and the number of end users.
# If you are only using one production worker for very small countries or small pilot projects, replace with an empty block like so: docker-workers: {}
docker-workers:
  hosts:
    siecm-prod-app-2: # @todo set this to be the hostname of your target server
      ansible_host: '102.16.127.249'
      ansible_port: 10011
      internal_ssh_port: 22
      data_label: data2

    siecm-prod-app-3: # @todo set this to be the hostname of your target server
      ansible_host: '102.16.127.249'
      ansible_port: 10012
      internal_ssh_port: 22
      data_label: data3
      # If you are using a jump server to access this environment, enter other SSH args here.
      # ansible_ssh_common_args: '-J jump@55.55.55.55 -o StrictHostKeyChecking=no'

backups:
  hosts:
    siecm-backup-app-1: # @todo set this to be the hostname of your backup server
      ansible_host: '102.16.127.249'
      ansible_port: 10015
      internal_ssh_port: 22
      backup_ssh_port: 10015 # defined in order to allow connecting to backup through internal and external ports
      ansible_ssh_private_key_file: /tmp/backup_ssh_private_key
# If you are using a jump server to access this environment
# jump:
#   hosts:
#     your-jumpserver-hostname-here: # @todo set this to be the hostname of your jump server
#       ansible_ssh_private_key_file: /tmp/jump_ssh_private_key # Written by provision pipeline. Assumes "jump" environment exists in Github environments
#       ansible_host: '55.55.55.55'
