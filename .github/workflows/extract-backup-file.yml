# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.
#
# OpenCRVS is also distributed under the terms of the Civil Registration
# & Healthcare Disclaimer located at http://opencrvs.org/license.
#
# Copyright (C) The OpenCRVS Authors located at https://github.com/opencrvs/opencrvs-core/blob/master/AUTHORS.
name: Extract backup file on environment

on:
  workflow_dispatch:
    inputs:
      backup-destination-environment:
        type: choice
        description: Environment backup file is located
        required: true
        default: qa
        options:
          - qa
      version_label:
        description: The version label for the backups
        required: true
jobs:
  extract-backup-file:
    environment: ${{ github.event.inputs.backup-destination-environment }}
    runs-on: ubuntu-22.04
    env:
      BACKUP_DESTINATION_SSH_HOST: ${{ vars.SSH_HOST || secrets.SSH_HOST }}
      BACKUP_DESTINATION_SSH_PORT: ${{ vars.SSH_PORT || secrets.SSH_PORT }}
      BACKUP_DESTINATION_SSH_USER: ${{ secrets.SSH_USER }}
      BACKUP_DESTINATION_SSH_KEY: ${{ secrets.SSH_KEY }}
      BACKUP_RAW_FILES_DIR: /tmp/backup-${{ github.event.inputs.version_label }}
    steps:
      - name: Clone country config resource package
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: './${{ github.event.repository.name }}'

      - name: Read known hosts
        run: |
          cd ${{ github.event.repository.name }}
          echo "KNOWN_HOSTS<<EOF" >> $GITHUB_ENV
          sed -i -e '$a\' ./infrastructure/known-hosts
          cat ./infrastructure/known-hosts >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: $BACKUP_DESTINATION_SSH_KEY
          known_hosts: ${{ env.KNOWN_HOSTS }}
      - name: Extract backup data in backup environment
        run: |
          cd ${{ github.event.repository.name }}
          scp -P $BACKUP_DESTINATION_SSH_PORT infrastructure/backups/extract-backup.sh $BACKUP_DESTINATION_SSH_USER@$BACKUP_DESTINATION_SSH_HOST:/tmp/
          ssh $BACKUP_DESTINATION_SSH_USER@$BACKUP_DESTINATION_SSH_HOST -p $BACKUP_DESTINATION_SSH_PORT "\
          sudo bash /tmp/extract-backup.sh \
          --label=${{ github.event.inputs.version_label }} \
          --backup_raw_files_dir=$BACKUP_RAW_FILES_DIR"
